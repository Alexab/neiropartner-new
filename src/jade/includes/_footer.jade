// FOOTER
footer.footer-wrapper
    .container.footer
        .footer__left
            // Menu
            ul.footer__menu
                li.footer__menu-item
                    a(href="javascript:void(0)" title="Проекты").footer__menu-link Проекты
                li.footer__menu-item
                    a(href="javascript:void(0)" title="Нейро").footer__menu-link Нейро
                li.footer__menu-item
                    a(href="javascript:void(0)" title="Консалтинг").footer__menu-link Консалтинг
                li.footer__menu-item
                    a(href="javascript:void(0)" title="Наши работы").footer__menu-link Наши работы
                li.footer__menu-item
                    a(href="javascript:void(0)" title="Сотрудничество").footer__menu-link Сотрудничество
                li.footer__menu-item
                    a(href="contacts.html" title="Контакты").footer__menu-link Контакты
            // Social icons
            ul.footer__social
                li.footer__social-icon.footer__social-icon--tw
                    a(href="javascript:void(0)" title="Нейро-Партнер в Твитере").footer__social-link
                li.footer__social-icon.footer__social-icon--vk
                    a(href="javascript:void(0)" title="Нейро-Партнер в ВКонтакте").footer__social-link
                li.footer__social-icon.footer__social-icon--fb
                    a(href="javascript:void(0)" title="Нейро-Партнер в Фейсбуке").footer__social-link
            // Copyright
            p.footer__copyright &copy; 2015 ООО «НейроПартнер»
        .footer__right
            p.footer__phone
                a(href="tel:+79818165060").footer__phone-link +7 (981) 81-65-060
            p.footer__address Невский пр-т, дом 1, корпус 5, офис 215, г. Санкт-Петербург, 190000, Россия
            .mouse


    .scripts

        // Async load CSS
        script.
            /*!
             loadCSS: load a CSS file asynchronously.
             [c]2015 @scottjehl, Filament Group, Inc.
             Licensed MIT
             */
            (function (w) {
                "use strict";
                /* exported loadCSS */
                w.loadCSS = function (href, before, media) {
                    // Arguments explained:
                    // `href` [REQUIRED] is the URL for your CSS file.
                    // `before` [OPTIONAL] is the element the script should use as a reference for injecting our stylesheet <link> before
                    // By default, loadCSS attempts to inject the link after the last stylesheet or script in the DOM. However, you might desire a more specific location in your document.
                    // `media` [OPTIONAL] is the media type or query of the stylesheet. By default it will be 'all'
                    var doc = w.document;
                    var ss = doc.createElement("link");
                    var ref;
                    if (before) {
                        ref = before;
                    }
                    else {
                        var refs;
                        if (doc.querySelectorAll) {
                            refs = doc.querySelectorAll("style,link[rel=stylesheet],script");
                        }
                        else {
                            refs = ( doc.body || doc.getElementsByTagName("head")[0] ).childNodes;
                        }
                        ref = refs[refs.length - 1];
                    }
                    var sheets = doc.styleSheets;
                    ss.rel = "stylesheet";
                    ss.href = href;
                    // temporarily set media to something inapplicable to ensure it'll fetch without blocking render
                    ss.media = "only x";
                    // Inject link
                    // Note: the ternary preserves the existing behavior of "before" argument, but we could choose to change the argument to "after" in a later release and standardize on ref.nextSibling for all refs
                    // Note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/
                    ref.parentNode.insertBefore(ss, ( before ? ref : ref.nextSibling ));
                    // A method (exposed on return object for external use) that mimics onload by polling until document.styleSheets until it includes the new sheet.
                    var onloadcssdefined = function (cb) {
                        var defined;
                        for (var i = 0; i < sheets.length; i++) {
                            var sheet = sheets[i];
                            if (sheet.href && sheet.href === ss.href) {
                                defined = true;
                            }
                        }
                        if (defined) {
                            cb();
                        } else {
                            setTimeout(function () {
                                onloadcssdefined(cb);
                            });
                        }
                    };
                    // once loaded, set link's media back to `all` so that the stylesheet applies once it loads
                    ss.onloadcssdefined = onloadcssdefined;
                    onloadcssdefined(function () {
                        ss.media = media || "all";
                    });
                    return ss;
                };
            }(this));
            /*!
             onloadCSS: adds onload support for asynchronous stylesheets loaded with loadCSS.
             [c]2014 @zachleat, Filament Group, Inc.
             Licensed MIT
             */
            /* global navigator */
            /* exported onloadCSS */
            function onloadCSS(ss, callback) {
                ss.onload = function () {
                    ss.onload = null;
                    if (callback) {
                        callback.call(ss);
                    }
                };
                // This code is for browsers that don’t support onload, any browser that
                // supports onload should use that instead.
                // No support for onload:
                //	* Android 4.3 (Samsung Galaxy S4, Browserstack)
                //	* Android 4.2 Browser (Samsung Galaxy SIII Mini GT-I8200L)
                //	* Android 2.3 (Pantech Burst P9070)
                // Weak inference targets Android < 4.4
                if ("isApplicationInstalled" in navigator && "onloadcssdefined" in ss) {
                    ss.onloadcssdefined(callback);
                }
            }
            var stylesheet = loadCSS('css/main.min.css');
            onloadCSS(stylesheet, function () {
                var expires = new Date(+new Date + (7 * 24 * 60 * 60 * 1000)).toUTCString();
                document.cookie = 'fullCSS=true; expires=' + expires;
            });


        // Set JS assets
        script(src="js/vendor/vendor-bundle.min.js" async)
        script(src="js/custom/custom-bundle.min.js" async)

        // Google Analytics: change UA-XXXXX-X to be your site's ID.
        script.
            (function(b,o,i,l,e,r){b.GoogleAnalyticsObject=l;b[l]||(b[l]=
            function(){(b[l].q=b[l].q || []).push(arguments)});b[l].l=+new Date;
            e=o.createElement(i);r=o.getElementsByTagName(i)[0];
            e.src='https://www.google-analytics.com/analytics.js';
            r.parentNode.insertBefore(e,r)}(window,document,'script','ga'));
            ga('create','UA-XXXXX-X','auto');ga('send','pageview');

        // Yandex.Metrika counter: change  yaCounterXXXXXXXX and id: XXXXXXXX to be your site's ID.
        script.
            (function (d, w, c) {
                (w[c] = w[c] || []).push(function () {
                    try {
                        w.yaCounterXXXXXXXX = new Ya.Metrika({
                            id: XXXXXXXX,
                            clickmap: true,
                            trackLinks: true,
                            accurateTrackBounce: true,
                            webvisor: true,
                            trackHash: true
                        });
                    } catch (e) {
                    }
                });
                var n = d.getElementsByTagName("script")[0],
                        s = d.createElement("script"),
                        f = function () {
                            n.parentNode.insertBefore(s, n);
                        };
                s.type = "text/javascript";
                s.async = true;
                s.src = "https://mc.yandex.ru/metrika/watch.js";
                if (w.opera == "[object Opera]") {
                    d.addEventListener("DOMContentLoaded", f, false);
                } else {
                    f();
                }
            })(document, window, "yandex_metrika_callbacks");
        noscript
            <div><img src="https://mc.yandex.ru/watch/24973550" style="position:absolute; left:-9999px;" alt="" /></div>